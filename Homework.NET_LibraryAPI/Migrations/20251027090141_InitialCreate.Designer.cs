// <auto-generated />
using Homework.NET_LibraryAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Homework.NET_LibraryAPI.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20251027090141_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("Homework.NET_LibraryAPI.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DateOfBirth")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = 1828,
                            Name = "Лев Толстой"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = 1799,
                            Name = "Александр Пушкин"
                        });
                });

            modelBuilder.Entity("Homework.NET_LibraryAPI.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            PublishedYear = 1869,
                            Title = "Война и мир"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            PublishedYear = 1877,
                            Title = "Анна Каренина"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            PublishedYear = 1833,
                            Title = "Евгений Онегин"
                        });
                });

            modelBuilder.Entity("Homework.NET_LibraryAPI.Models.Book", b =>
                {
                    b.HasOne("Homework.NET_LibraryAPI.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Homework.NET_LibraryAPI.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
